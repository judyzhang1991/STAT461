sample(N,n,replace=FALSE)
n=25
N=500
sample(N,n,replace=FALSE)
#Agent Orange Example
agent.orange.data=read.table("agent_orange_data.txt", header=TRUE)
#Agent Orange Example
agent.orange.data=read.table("agent_orange_data.txt", header=TRUE)
#Agent Orange Example
agent.orange.data=read.table("agent_orange_data.txt", header=TRUE)
#Agent Orange Example
agent.orange.data=read.table("agent_orange_data", header=TRUE)
#Agent Orange Example
agent.orange.data=read.table("agent_orange_data.txt", header=TRUE)
#Set working directory
setwd("/Users/JudyZhang/Documents/Work/GitRepo/STAT425")
#Agent Orange Example
agent.orange.data=read.table("agent_orange_data.txt", header=TRUE)
dioxin=agent.orange.data$dioxin
N=646
pilotsamplesize=20
pilotsample=sample(N,pilotsamplesize, replace=FALSE)
s.pilotsample=sd(dioxin[pilotsample])
s.pilotsample
#Specify margin of error
e=0.25
n=(1.96^2*s.pilotsample^2)/(1.96^2*s.pilotsample^2/N+e^2)
n
#Sample the remaining needed observations from the population
#that the units already sampled in the pilot sample
full.sample.size=ceiling(nhat)
#Sample the remaining needed observations from the population
#that the units already sampled in the pilot sample
full.sample.size=ceiling(n)
nhat=(1.96^2*s.pilotsample^2)/(1.96^2*s.pilotsample^2/N+e^2)
nhat
#Sample the remaining needed observations from the population
#that the units already sampled in the pilot sample
full.sample.size=ceiling(nhat)
full.sample.size
remaining.sample.szie=full.sample.size-pilotsamplesize
#Continue sampling to get the remaining sample
remainingsample=sample(seq(1,N,1)[-pilotsample],remaining.sample.size,replace=FALSE)
remaining.sample.size=full.sample.size-pilotsamplesize
#Continue sampling to get the remaining sample
remainingsample=sample(seq(1,N,1)[-pilotsample],remaining.sample.size,replace=FALSE)
#Combine pilot and remaining sample to get full sample
fullsample=c(dioxin[pilotsample],dioxin[remainingsample])
fullsample
#Calculate the mean and standard deviation of the full sample
mean.fullsample=mean(fullsample)
s.fullsample=sd(fullsample)
#Calculate the standarded error, lower CI and upper CI of the full sample
se.ybar=sqrt(s.fullsample^2/full.sample.size)*(1-full.sample.size/N))
#Calculate the standarded error, lower CI and upper CI of the full sample
se.ybar=sqrt((s.fullsample^2/full.sample.size)*(1-full.sample.size/N))
lowerci=mean.fullsample-1.96*se.ybar
upperci=mean.fullsample+1.96*se.ybar
s.fullsample
full.sample.size
nhat
mean.fullsample
se.ybar
lowerci
upperci
#Get population mean and standard deviation
mean.popl=mean(dioxin)
mean.popl
s.popl=sd(dioxin)
s.popl
#Calculate the width of the CI
ciwidth=format(round(upperci, 2), nsmall = 2) - format(round(lowerci, 2), nsmall = 2)
#Calculate the width of the CI
#Round upper and lower ci to 2 decimal places
upperci=format(round(upperci, 2), nsmall = 2)
lowerci=format(round(lowerci, 2), nsmall = 2)
uppcerci
upperci
upperci=mean.fullsample+1.96*se.ybar
upperci
ciwidth=upperci-lowerci
#Calculate the width of the CI
#Round upper and lower ci to 2 decimal places
upperci=round(upperci, 2)
lowerci=mean.fullsample-1.96*se.ybar
upperci=mean.fullsample+1.96*se.ybar
#Calculate the width of the CI
#Round upper and lower ci to 2 decimal places
upperci=round(upperci, 2)
lowerci=round(lowerci, 2)
ciwidth=upperci-lowerci
ciwidth
actual.marginoferror = ciwidth/2
actual.marginoferro
actual.marginoferror
